myPal <- colorRampPalette(rev(brewer.pal(7,"RdBu")[c(1,2,4,6,7)]))
par(mfrow=c(ceiling(sqrt(length(states_with_dre))), ceiling(sqrt(length(states_with_dre)))), mar=c(3.1,1.1,3.1,1.1), bg="#444444")
for(ss in states_with_dre)
{
plot(us[us$state_abbr==ss,],col=myPal(100)[us$gop_ratio[us$state_abbr==ss] * 99 + 1],border=ifelse(us$dre[us$state_abbr==ss],"white",NA))
mtext(ss,3,line=0,cex=2,col="white")
if(sum(is.na(coef(model_list[[ss]]))) == 0)
{
dens_dre <- density(predictions(model_list[[ss]],demo_dre))
dens_dre <- data.frame(x=dens_dre$x, y=dens_dre$y)
dens_dre$x <- (dens_dre$x - min(dens_dre$x)) / (max(dens_dre$x) - min(dens_dre$x))
dens_dre <- rbind(c(0,0),dens_dre,c(1,0))
dens_nodre <- density(predictions(model_list[[ss]],demo_nodre))
dens_nodre <- data.frame(x=dens_nodre$x, y=dens_nodre$y)
dens_nodre$x <- (dens_nodre$x - min(dens_nodre$x)) / (max(dens_nodre$x) - min(dens_nodre$x))
dens_nodre <- rbind(c(0,0),dens_nodre,c(1,0))
dens_dre$y <- dens_dre$y/max(dens_dre$y)/4
dens_nodre$y <- dens_nodre$y/max(dens_nodre$y)/4
polygon(grconvertX(dens_dre$x, from="npc", to="user"),grconvertY(dens_dre$y, from="npc", to="user"), col="#c2a5cf99", border="white")
polygon(grconvertX(dens_nodre$x, from="npc", to="user"),grconvertY(dens_nodre$y, from="npc", to="user"), col="#a6dba099", border="white")
}
}
dev.off()
predictions <- function(model,data)
{
se <- summary(model)$coefficients[,2]
beta <- summary(model)$coefficients[,1]
draws <- mvrnorm(100000,beta,diag(se^2))
sims <- draws %*% as.matrix(unlist(c(1,demo_dre)))
sims
}
png("dre_states.png",width=1024,height=1024)
myPal <- colorRampPalette(rev(brewer.pal(7,"RdBu")[c(1,2,4,6,7)]))
par(mfrow=c(ceiling(sqrt(length(states_with_dre))), ceiling(sqrt(length(states_with_dre)))), mar=c(3.1,1.1,3.1,1.1), bg="#444444")
for(ss in states_with_dre)
{
plot(us[us$state_abbr==ss,],col=myPal(100)[us$gop_ratio[us$state_abbr==ss] * 99 + 1],border=ifelse(us$dre[us$state_abbr==ss],"white",NA))
mtext(ss,3,line=0,cex=2,col="white")
if(sum(is.na(coef(model_list[[ss]]))) == 0)
{
dens_dre <- density(predictions(model_list[[ss]],demo_dre))
dens_dre <- data.frame(x=dens_dre$x, y=dens_dre$y)
dens_dre$x <- (dens_dre$x - min(dens_dre$x)) / (max(dens_dre$x) - min(dens_dre$x))
dens_dre <- rbind(c(0,0),dens_dre,c(1,0))
dens_nodre <- density(predictions(model_list[[ss]],demo_nodre))
dens_nodre <- data.frame(x=dens_nodre$x, y=dens_nodre$y)
dens_nodre$x <- (dens_nodre$x - min(dens_nodre$x)) / (max(dens_nodre$x) - min(dens_nodre$x))
dens_nodre <- rbind(c(0,0),dens_nodre,c(1,0))
dens_dre$y <- dens_dre$y/max(dens_dre$y)/4
dens_nodre$y <- dens_nodre$y/max(dens_nodre$y)/4
polygon(grconvertX(dens_dre$x, from="npc", to="user"),grconvertY(dens_dre$y, from="npc", to="user"), col="#c2a5cf99", border="white")
polygon(grconvertX(dens_nodre$x, from="npc", to="user"),grconvertY(dens_nodre$y, from="npc", to="user"), col="#a6dba099", border="white")
}
}
dev.off()
png("dre_states.png",width=1024,height=1024)
myPal <- colorRampPalette(rev(brewer.pal(7,"RdBu")[c(1,2,4,6,7)]))
par(mfrow=c(ceiling(sqrt(length(states_with_dre))), ceiling(sqrt(length(states_with_dre)))), mar=c(3.1,1.1,3.1,1.1), bg="#444444")
for(ss in states_with_dre)
{
plot(us[us$state_abbr==ss,],col=ifelse(us$dre[us$state_abbr==ss],"#b2182b", "#e0e0e0"), border=NA)
mtext(ss,3,line=0,cex=2,col="white")
if(sum(is.na(coef(model_list[[ss]]))) == 0)
{
dens_dre <- density(predictions(model_list[[ss]],demo_dre))
dens_dre <- data.frame(x=dens_dre$x, y=dens_dre$y)
dens_dre$x <- (dens_dre$x - min(dens_dre$x)) / (max(dens_dre$x) - min(dens_dre$x))
dens_dre <- rbind(c(0,0),dens_dre,c(1,0))
dens_nodre <- density(predictions(model_list[[ss]],demo_nodre))
dens_nodre <- data.frame(x=dens_nodre$x, y=dens_nodre$y)
dens_nodre$x <- (dens_nodre$x - min(dens_nodre$x)) / (max(dens_nodre$x) - min(dens_nodre$x))
dens_nodre <- rbind(c(0,0),dens_nodre,c(1,0))
dens_dre$y <- dens_dre$y/max(dens_dre$y)/4
dens_nodre$y <- dens_nodre$y/max(dens_nodre$y)/4
polygon(grconvertX(dens_dre$x, from="npc", to="user"),grconvertY(dens_dre$y, from="npc", to="user"), col="#c2a5cf99", border="white")
polygon(grconvertX(dens_nodre$x, from="npc", to="user"),grconvertY(dens_nodre$y, from="npc", to="user"), col="#a6dba099", border="white")
}
}
dev.off()
names(model_list[[1]])
cov(model_list[[1]])
?segements
?segment
?segments
?lines
?segments
png("dre_states.png",width=1024,height=1024)
myPal <- colorRampPalette(rev(brewer.pal(7,"RdBu")[c(1,2,4,6,7)]))
par(mfrow=c(ceiling(sqrt(length(states_with_dre))), ceiling(sqrt(length(states_with_dre)))), mar=c(3.1,1.1,3.1,1.1), bg="#444444")
for(ss in states_with_dre)
{
plot(us[us$state_abbr==ss,],col=ifelse(us$dre[us$state_abbr==ss],"#b2182b", "#e0e0e0"), border=NA)
mtext(ss,3,line=0,cex=2,col="white")
if(sum(is.na(coef(model_list[[ss]]))) == 0)
{
sims_dre <- predictions(model_list[[ss]],demo_dre)
dens_dre <- density(sims_dre)
dens_dre <- data.frame(x=dens_dre$x, y=dens_dre$y)
dens_dre$x <- (dens_dre$x - min(dens_dre$x)) / (max(dens_dre$x) - min(dens_dre$x))
dens_dre <- rbind(c(0,0),dens_dre,c(1,0))
sims_nodre <- predictions(model_list[[ss]],demo_nodre)
dens_nodre <- density(sims_nodre)
dens_nodre <- data.frame(x=dens_nodre$x, y=dens_nodre$y)
dens_nodre$x <- (dens_nodre$x - min(dens_nodre$x)) / (max(dens_nodre$x) - min(dens_nodre$x))
dens_nodre <- rbind(c(0,0),dens_nodre,c(1,0))
dens_dre$y <- dens_dre$y/max(dens_dre$y)/4
dens_nodre$y <- dens_nodre$y/max(dens_nodre$y)/4
polygon(grconvertX(dens_nodre$x, from="npc", to="user"),grconvertY(dens_nodre$y, from="npc", to="user"), col="#e0e0e099", border="white")
polygon(grconvertX(dens_dre$x, from="npc", to="user"),grconvertY(dens_dre$y, from="npc", to="user"), col="#b2182b99", border="white")
segments(mean(sims_nodre),0,mean(sims_nodre),.25,col="#e0e0e0")
segments(mean(sims_dre),0,mean(sims_dre),.25,col="#b2182b")
}
}
dev.off()
png("dre_states.png",width=1024,height=1024)
myPal <- colorRampPalette(rev(brewer.pal(7,"RdBu")[c(1,2,4,6,7)]))
par(mfrow=c(ceiling(sqrt(length(states_with_dre))), ceiling(sqrt(length(states_with_dre)))), mar=c(3.1,1.1,3.1,1.1), bg="#444444")
for(ss in states_with_dre)
{
plot(us[us$state_abbr==ss,],col=ifelse(us$dre[us$state_abbr==ss],"#b2182b", "#e0e0e0"), border=NA)
mtext(ss,3,line=0,cex=2,col="white")
if(sum(is.na(coef(model_list[[ss]]))) == 0)
{
sims_dre <- predictions(model_list[[ss]],demo_dre)
dens_dre <- density(sims_dre)
dens_dre <- data.frame(x=dens_dre$x, y=dens_dre$y)
dens_dre$x <- (dens_dre$x - min(dens_dre$x)) / (max(dens_dre$x) - min(dens_dre$x))
dens_dre <- rbind(c(0,0),dens_dre,c(1,0))
sims_nodre <- predictions(model_list[[ss]],demo_nodre)
dens_nodre <- density(sims_nodre)
dens_nodre <- data.frame(x=dens_nodre$x, y=dens_nodre$y)
dens_nodre$x <- (dens_nodre$x - min(dens_nodre$x)) / (max(dens_nodre$x) - min(dens_nodre$x))
dens_nodre <- rbind(c(0,0),dens_nodre,c(1,0))
dens_dre$y <- dens_dre$y/max(dens_dre$y)/4
dens_nodre$y <- dens_nodre$y/max(dens_nodre$y)/4
polygon(grconvertX(dens_nodre$x, from="npc", to="user"),grconvertY(dens_nodre$y, from="npc", to="user"), col="#e0e0e099", border="white")
polygon(grconvertX(dens_dre$x, from="npc", to="user"),grconvertY(dens_dre$y, from="npc", to="user"), col="#b2182b99", border="white")
segments(grconvertX(mean(sims_nodre), from="npc", to="user"),grconvertY(0, from="npc", to="user"),grconvertX(mean(sims_nodre), from="npc", to="user"),grconvertY(.25, from="npc", to="user"),col="#e0e0e0")
segments(grconvertX(mean(sims_dre), from="npc", to="user"),grconvertY(0, from="npc", to="user"),grconvertX(mean(sims_dre), from="npc", to="user"),grconvertY(.25, from="npc", to="user"),col="#b2182b")
}
}
dev.off()
png("dre_states.png",width=1024,height=1024)
myPal <- colorRampPalette(rev(brewer.pal(7,"RdBu")[c(1,2,4,6,7)]))
par(mfrow=c(ceiling(sqrt(length(states_with_dre))), ceiling(sqrt(length(states_with_dre)))), mar=c(3.1,1.1,3.1,1.1), bg="#444444")
for(ss in states_with_dre)
{
plot(us[us$state_abbr==ss,],col=ifelse(us$dre[us$state_abbr==ss],"#b2182b", "#e0e0e0"), border=NA)
mtext(ss,3,line=0,cex=2,col="white")
if(sum(is.na(coef(model_list[[ss]]))) == 0)
{
sims_dre <- predictions(model_list[[ss]],demo_dre)
dens_dre <- density(sims_dre)
dens_dre <- data.frame(x=dens_dre$x, y=dens_dre$y)
dens_dre$x <- (dens_dre$x - min(dens_dre$x)) / (max(dens_dre$x) - min(dens_dre$x))
dens_dre <- rbind(c(0,0),dens_dre,c(1,0))
sims_nodre <- predictions(model_list[[ss]],demo_nodre)
dens_nodre <- density(sims_nodre)
dens_nodre <- data.frame(x=dens_nodre$x, y=dens_nodre$y)
dens_nodre$x <- (dens_nodre$x - min(dens_nodre$x)) / (max(dens_nodre$x) - min(dens_nodre$x))
dens_nodre <- rbind(c(0,0),dens_nodre,c(1,0))
dens_dre$y <- dens_dre$y/max(dens_dre$y)/4
dens_nodre$y <- dens_nodre$y/max(dens_nodre$y)/4
polygon(grconvertX(dens_nodre$x, from="npc", to="user"),grconvertY(dens_nodre$y, from="npc", to="user"), col="#e0e0e099", border="white")
polygon(grconvertX(dens_dre$x, from="npc", to="user"),grconvertY(dens_dre$y, from="npc", to="user"), col="#b2182b99", border="white")
}
}
plot(0,0,type="n",frame=F,xaxt="n",yaxt="n",xlim=c(0,1),ylim=c(0,1))
rect(0,0,0.25,0.25,col="#e0e0e0",border="white")
rect(0,0.5,0,0.75,0.25,col="#b2182b",border="white")
dev.off()
png("dre_states.png",width=1024,height=1024)
myPal <- colorRampPalette(rev(brewer.pal(7,"RdBu")[c(1,2,4,6,7)]))
par(mfrow=c(ceiling(sqrt(length(states_with_dre))), ceiling(sqrt(length(states_with_dre)))), mar=c(3.1,1.1,3.1,1.1), bg="#444444")
for(ss in states_with_dre)
{
plot(us[us$state_abbr==ss,],col=ifelse(us$dre[us$state_abbr==ss],"#b2182b", "#e0e0e0"), border=NA)
mtext(ss,3,line=0,cex=2,col="white")
if(sum(is.na(coef(model_list[[ss]]))) == 0)
{
sims_dre <- predictions(model_list[[ss]],demo_dre)
dens_dre <- density(sims_dre)
dens_dre <- data.frame(x=dens_dre$x, y=dens_dre$y)
dens_dre$x <- (dens_dre$x - min(dens_dre$x)) / (max(dens_dre$x) - min(dens_dre$x))
dens_dre <- rbind(c(0,0),dens_dre,c(1,0))
sims_nodre <- predictions(model_list[[ss]],demo_nodre)
dens_nodre <- density(sims_nodre)
dens_nodre <- data.frame(x=dens_nodre$x, y=dens_nodre$y)
dens_nodre$x <- (dens_nodre$x - min(dens_nodre$x)) / (max(dens_nodre$x) - min(dens_nodre$x))
dens_nodre <- rbind(c(0,0),dens_nodre,c(1,0))
dens_dre$y <- dens_dre$y/max(dens_dre$y)/4
dens_nodre$y <- dens_nodre$y/max(dens_nodre$y)/4
polygon(grconvertX(dens_nodre$x, from="npc", to="user"),grconvertY(dens_nodre$y, from="npc", to="user"), col="#e0e0e099", border="white")
polygon(grconvertX(dens_dre$x, from="npc", to="user"),grconvertY(dens_dre$y, from="npc", to="user"), col="#b2182b99", border="white")
}
}
plot(0,0,type="n",frame=F,xaxt="n",yaxt="n",xlim=c(0,1),ylim=c(0,1))
rect(0,0,0.25,0.25,col="#e0e0e0",border="white")
rect(0,0.5,0.25,0.75,col="#b2182b",border="white")
dev.off()
png("dre_states.png",width=1024,height=1024)
myPal <- colorRampPalette(rev(brewer.pal(7,"RdBu")[c(1,2,4,6,7)]))
par(mfrow=c(ceiling(sqrt(length(states_with_dre))), ceiling(sqrt(length(states_with_dre)))), mar=c(3.1,1.1,3.1,1.1), bg="#444444")
for(ss in states_with_dre)
{
plot(us[us$state_abbr==ss,],col=ifelse(us$dre[us$state_abbr==ss],"#b2182b", "#e0e0e0"), border=NA)
mtext(ss,3,line=0,cex=2,col="white")
if(sum(is.na(coef(model_list[[ss]]))) == 0)
{
sims_dre <- predictions(model_list[[ss]],demo_dre)
dens_dre <- density(sims_dre)
dens_dre <- data.frame(x=dens_dre$x, y=dens_dre$y)
dens_dre$x <- (dens_dre$x - min(dens_dre$x)) / (max(dens_dre$x) - min(dens_dre$x))
dens_dre <- rbind(c(0,0),dens_dre,c(1,0))
sims_nodre <- predictions(model_list[[ss]],demo_nodre)
dens_nodre <- density(sims_nodre)
dens_nodre <- data.frame(x=dens_nodre$x, y=dens_nodre$y)
dens_nodre$x <- (dens_nodre$x - min(dens_nodre$x)) / (max(dens_nodre$x) - min(dens_nodre$x))
dens_nodre <- rbind(c(0,0),dens_nodre,c(1,0))
dens_dre$y <- dens_dre$y/max(dens_dre$y)/4
dens_nodre$y <- dens_nodre$y/max(dens_nodre$y)/4
polygon(grconvertX(dens_nodre$x, from="npc", to="user"),grconvertY(dens_nodre$y, from="npc", to="user"), col="#e0e0e099", border="white")
polygon(grconvertX(dens_dre$x, from="npc", to="user"),grconvertY(dens_dre$y, from="npc", to="user"), col="#b2182b99", border="white")
}
}
plot(0,0,type="n",frame=F,xaxt="n",yaxt="n",xlim=c(0,1),ylim=c(0,1))
rect(0,0,0.25,0.25,col="#e0e0e0",border="white")
rect(0,0.5,0.25,0.75,col="#b2182b",border="white")
text(0.3,0.25/2,"No Electronic Voting",cex=2,at=4,col="white")
dev.off()
?text
png("dre_states.png",width=1024,height=1024)
myPal <- colorRampPalette(rev(brewer.pal(7,"RdBu")[c(1,2,4,6,7)]))
par(mfrow=c(ceiling(sqrt(length(states_with_dre))), ceiling(sqrt(length(states_with_dre)))), mar=c(3.1,1.1,3.1,1.1), bg="#444444")
for(ss in states_with_dre)
{
plot(us[us$state_abbr==ss,],col=ifelse(us$dre[us$state_abbr==ss],"#b2182b", "#e0e0e0"), border=NA)
mtext(ss,3,line=0,cex=2,col="white")
if(sum(is.na(coef(model_list[[ss]]))) == 0)
{
sims_dre <- predictions(model_list[[ss]],demo_dre)
dens_dre <- density(sims_dre)
dens_dre <- data.frame(x=dens_dre$x, y=dens_dre$y)
dens_dre$x <- (dens_dre$x - min(dens_dre$x)) / (max(dens_dre$x) - min(dens_dre$x))
dens_dre <- rbind(c(0,0),dens_dre,c(1,0))
sims_nodre <- predictions(model_list[[ss]],demo_nodre)
dens_nodre <- density(sims_nodre)
dens_nodre <- data.frame(x=dens_nodre$x, y=dens_nodre$y)
dens_nodre$x <- (dens_nodre$x - min(dens_nodre$x)) / (max(dens_nodre$x) - min(dens_nodre$x))
dens_nodre <- rbind(c(0,0),dens_nodre,c(1,0))
dens_dre$y <- dens_dre$y/max(dens_dre$y)/4
dens_nodre$y <- dens_nodre$y/max(dens_nodre$y)/4
polygon(grconvertX(dens_nodre$x, from="npc", to="user"),grconvertY(dens_nodre$y, from="npc", to="user"), col="#e0e0e099", border="white")
polygon(grconvertX(dens_dre$x, from="npc", to="user"),grconvertY(dens_dre$y, from="npc", to="user"), col="#b2182b99", border="white")
}
}
plot(0,0,type="n",frame=F,xaxt="n",yaxt="n",xlim=c(0,1),ylim=c(0,1))
rect(0,0,0.25,0.25,col="#e0e0e0",border="white")
rect(0,0.5,0.25,0.75,col="#b2182b",border="white")
text(0.3,0.25/2,"No E-Voting",cex=2,pos=4,col="white")
text(0.3,0.25/2+0.5,"E-Voting",cex=2,pos=4,col="white")
dev.off()
?sprintf
?expression
?sprintf
sprintf("%.2f  ",coef(model_list[[ss]])$electronic)
coef(model_list[[ss]])
coef(model_list[[ss]])$electronic
coef(model_list[[ss]])["electronic"])
coef(model_list[[ss]])["electronic"
]
summary(model_list[[ss]])
summary(model_list[[ss]])$Coefficients
summary(model_list[[ss]])$coefficients
summary(model_list[[ss]])$coefficients[,2]
summary(model_list[[ss]])$coefficients[,2]$electronic
summary(model_list[[ss]])$coefficients[,2]['electronic']
?mtext
png("dre_states.png",width=1024,height=1024)
myPal <- colorRampPalette(rev(brewer.pal(7,"RdBu")[c(1,2,4,6,7)]))
par(mfrow=c(ceiling(sqrt(length(states_with_dre))), ceiling(sqrt(length(states_with_dre)))), mar=c(3.1,1.1,3.1,1.1), bg="#444444")
for(ss in states_with_dre)
{
plot(us[us$state_abbr==ss,],col=ifelse(us$dre[us$state_abbr==ss],"#b2182b", "#e0e0e0"), border=NA)
mtext(ss,3,line=0,cex=2,col="white")
if(sum(is.na(coef(model_list[[ss]]))) == 0)
{
sims_dre <- predictions(model_list[[ss]],demo_dre)
dens_dre <- density(sims_dre)
dens_dre <- data.frame(x=dens_dre$x, y=dens_dre$y)
dens_dre$x <- (dens_dre$x - min(dens_dre$x)) / (max(dens_dre$x) - min(dens_dre$x))
dens_dre <- rbind(c(0,0),dens_dre,c(1,0))
sims_nodre <- predictions(model_list[[ss]],demo_nodre)
dens_nodre <- density(sims_nodre)
dens_nodre <- data.frame(x=dens_nodre$x, y=dens_nodre$y)
dens_nodre$x <- (dens_nodre$x - min(dens_nodre$x)) / (max(dens_nodre$x) - min(dens_nodre$x))
dens_nodre <- rbind(c(0,0),dens_nodre,c(1,0))
dens_dre$y <- dens_dre$y/max(dens_dre$y)/4
dens_nodre$y <- dens_nodre$y/max(dens_nodre$y)/4
polygon(grconvertX(dens_nodre$x, from="npc", to="user"),grconvertY(dens_nodre$y, from="npc", to="user"), col="#e0e0e099", border="white")
polygon(grconvertX(dens_dre$x, from="npc", to="user"),grconvertY(dens_dre$y, from="npc", to="user"), col="#b2182b99", border="white")
mtext(expression(paste(Beta, sprintf("%.2f  ",coef(model_list[[ss]])["electronic"]), sigma, sprintf("%.2f  ",summary(model_list[[ss]])$coefficients[,2]['electronic']))),1,line=0,col="white")
}
}
plot(0,0,type="n",frame=F,xaxt="n",yaxt="n",xlim=c(0,1),ylim=c(0,1))
rect(0,0,0.25,0.25,col="#e0e0e0",border="white")
rect(0,0.5,0.25,0.75,col="#b2182b",border="white")
text(0.3,0.25/2,"No E-Voting",cex=2,pos=4,col="white")
text(0.3,0.25/2+0.5,"E-Voting",cex=2,pos=4,col="white")
dev.off()
?format
png("dre_states.png",width=1024,height=1024)
myPal <- colorRampPalette(rev(brewer.pal(7,"RdBu")[c(1,2,4,6,7)]))
par(mfrow=c(ceiling(sqrt(length(states_with_dre))), ceiling(sqrt(length(states_with_dre)))), mar=c(3.1,1.1,3.1,1.1), bg="#444444")
for(ss in states_with_dre)
{
plot(us[us$state_abbr==ss,],col=ifelse(us$dre[us$state_abbr==ss],"#b2182b", "#e0e0e0"), border=NA)
mtext(ss,3,line=0,cex=2,col="white")
if(sum(is.na(coef(model_list[[ss]]))) == 0)
{
sims_dre <- predictions(model_list[[ss]],demo_dre)
dens_dre <- density(sims_dre)
dens_dre <- data.frame(x=dens_dre$x, y=dens_dre$y)
dens_dre$x <- (dens_dre$x - min(dens_dre$x)) / (max(dens_dre$x) - min(dens_dre$x))
dens_dre <- rbind(c(0,0),dens_dre,c(1,0))
sims_nodre <- predictions(model_list[[ss]],demo_nodre)
dens_nodre <- density(sims_nodre)
dens_nodre <- data.frame(x=dens_nodre$x, y=dens_nodre$y)
dens_nodre$x <- (dens_nodre$x - min(dens_nodre$x)) / (max(dens_nodre$x) - min(dens_nodre$x))
dens_nodre <- rbind(c(0,0),dens_nodre,c(1,0))
dens_dre$y <- dens_dre$y/max(dens_dre$y)/4
dens_nodre$y <- dens_nodre$y/max(dens_nodre$y)/4
polygon(grconvertX(dens_nodre$x, from="npc", to="user"),grconvertY(dens_nodre$y, from="npc", to="user"), col="#e0e0e099", border="white")
polygon(grconvertX(dens_dre$x, from="npc", to="user"),grconvertY(dens_dre$y, from="npc", to="user"), col="#b2182b99", border="white")
mtext(expression(paste(Beta, format(coef(model_list[[ss]])["electronic"],digits=2), sigma, format(summary(model_list[[ss]])$coefficients[,2]['electronic'], digits=2))),1,line=0,col="white")
}
}
plot(0,0,type="n",frame=F,xaxt="n",yaxt="n",xlim=c(0,1),ylim=c(0,1))
rect(0,0,0.25,0.25,col="#e0e0e0",border="white")
rect(0,0.5,0.25,0.75,col="#b2182b",border="white")
text(0.3,0.25/2,"No E-Voting",cex=2,pos=4,col="white")
text(0.3,0.25/2+0.5,"E-Voting",cex=2,pos=4,col="white")
dev.off()
png("dre_states.png",width=1024,height=1024)
myPal <- colorRampPalette(rev(brewer.pal(7,"RdBu")[c(1,2,4,6,7)]))
par(mfrow=c(ceiling(sqrt(length(states_with_dre))), ceiling(sqrt(length(states_with_dre)))), mar=c(3.1,1.1,3.1,1.1), bg="#444444")
for(ss in states_with_dre)
{
plot(us[us$state_abbr==ss,],col=ifelse(us$dre[us$state_abbr==ss],"#b2182b", "#e0e0e0"), border=NA)
mtext(ss,3,line=0,cex=2,col="white")
if(sum(is.na(coef(model_list[[ss]]))) == 0)
{
sims_dre <- predictions(model_list[[ss]],demo_dre)
dens_dre <- density(sims_dre)
dens_dre <- data.frame(x=dens_dre$x, y=dens_dre$y)
dens_dre$x <- (dens_dre$x - min(dens_dre$x)) / (max(dens_dre$x) - min(dens_dre$x))
dens_dre <- rbind(c(0,0),dens_dre,c(1,0))
sims_nodre <- predictions(model_list[[ss]],demo_nodre)
dens_nodre <- density(sims_nodre)
dens_nodre <- data.frame(x=dens_nodre$x, y=dens_nodre$y)
dens_nodre$x <- (dens_nodre$x - min(dens_nodre$x)) / (max(dens_nodre$x) - min(dens_nodre$x))
dens_nodre <- rbind(c(0,0),dens_nodre,c(1,0))
dens_dre$y <- dens_dre$y/max(dens_dre$y)/4
dens_nodre$y <- dens_nodre$y/max(dens_nodre$y)/4
polygon(grconvertX(dens_nodre$x, from="npc", to="user"),grconvertY(dens_nodre$y, from="npc", to="user"), col="#e0e0e099", border="white")
polygon(grconvertX(dens_dre$x, from="npc", to="user"),grconvertY(dens_dre$y, from="npc", to="user"), col="#b2182b99", border="white")
mtext(paste("Beta: ", format(coef(model_list[[ss]])["electronic"],digits=2), "  SE: ", format(summary(model_list[[ss]])$coefficients[,2]['electronic'], digits=2)),1,line=0,col="white")
}
}
plot(0,0,type="n",frame=F,xaxt="n",yaxt="n",xlim=c(0,1),ylim=c(0,1))
rect(0,0,0.25,0.25,col="#e0e0e0",border="white")
rect(0,0.5,0.25,0.75,col="#b2182b",border="white")
text(0.3,0.25/2,"No E-Voting",cex=2,pos=4,col="white")
text(0.3,0.25/2+0.5,"E-Voting",cex=2,pos=4,col="white")
dev.off()
summary(model_list[[ss]])
png("dre_states.png",width=1024,height=1024)
myPal <- colorRampPalette(rev(brewer.pal(7,"RdBu")[c(1,2,4,6,7)]))
par(mfrow=c(ceiling(sqrt(length(states_with_dre))), ceiling(sqrt(length(states_with_dre)))), mar=c(3.1,1.1,3.1,1.1), bg="#444444")
for(ss in states_with_dre)
{
plot(us[us$state_abbr==ss,],col=ifelse(us$dre[us$state_abbr==ss],"#b2182b", "#e0e0e0"), border=NA)
mtext(ss,3,line=0,cex=2,col="white")
if(sum(is.na(coef(model_list[[ss]]))) == 0)
{
sims_dre <- predictions(model_list[[ss]],demo_dre)
dens_dre <- density(sims_dre)
dens_dre <- data.frame(x=dens_dre$x, y=dens_dre$y)
dens_dre$x <- (dens_dre$x - min(dens_dre$x)) / (max(dens_dre$x) - min(dens_dre$x))
dens_dre <- rbind(c(0,0),dens_dre,c(1,0))
sims_nodre <- predictions(model_list[[ss]],demo_nodre)
dens_nodre <- density(sims_nodre)
dens_nodre <- data.frame(x=dens_nodre$x, y=dens_nodre$y)
dens_nodre$x <- (dens_nodre$x - min(dens_nodre$x)) / (max(dens_nodre$x) - min(dens_nodre$x))
dens_nodre <- rbind(c(0,0),dens_nodre,c(1,0))
dens_dre$y <- dens_dre$y/max(dens_dre$y)/4
dens_nodre$y <- dens_nodre$y/max(dens_nodre$y)/4
polygon(grconvertX(dens_nodre$x, from="npc", to="user"),grconvertY(dens_nodre$y, from="npc", to="user"), col="#e0e0e099", border="white")
polygon(grconvertX(dens_dre$x, from="npc", to="user"),grconvertY(dens_dre$y, from="npc", to="user"), col="#b2182b99", border="white")
mtext(sprintf("beta: %.2f  |  s.e.: %.2f  |  t: $.2f", coef(model_list[[ss]])["electronic"], summary(model_list[[ss]])$coefficients[,2]['electronic'], summary(model_list[[ss]])$coefficients[,3]['electronic']),1,line=0.25,col="white")
}
}
plot(0,0,type="n",frame=F,xaxt="n",yaxt="n",xlim=c(0,1),ylim=c(0,1))
rect(0,0,0.25,0.25,col="#e0e0e0",border="white")
rect(0,0.5,0.25,0.75,col="#b2182b",border="white")
text(0.3,0.25/2,"No E-Voting",cex=2,pos=4,col="white")
text(0.3,0.25/2+0.5,"E-Voting",cex=2,pos=4,col="white")
dev.off()
png("dre_states.png",width=1024,height=1024)
myPal <- colorRampPalette(rev(brewer.pal(7,"RdBu")[c(1,2,4,6,7)]))
par(mfrow=c(ceiling(sqrt(length(states_with_dre))), ceiling(sqrt(length(states_with_dre)))), mar=c(3.1,1.1,3.1,1.1), bg="#444444")
for(ss in states_with_dre)
{
plot(us[us$state_abbr==ss,],col=ifelse(us$dre[us$state_abbr==ss],"#b2182b", "#e0e0e0"), border=NA)
mtext(ss,3,line=0,cex=2,col="white")
if(sum(is.na(coef(model_list[[ss]]))) == 0)
{
sims_dre <- predictions(model_list[[ss]],demo_dre)
dens_dre <- density(sims_dre)
dens_dre <- data.frame(x=dens_dre$x, y=dens_dre$y)
dens_dre$x <- (dens_dre$x - min(dens_dre$x)) / (max(dens_dre$x) - min(dens_dre$x))
dens_dre <- rbind(c(0,0),dens_dre,c(1,0))
sims_nodre <- predictions(model_list[[ss]],demo_nodre)
dens_nodre <- density(sims_nodre)
dens_nodre <- data.frame(x=dens_nodre$x, y=dens_nodre$y)
dens_nodre$x <- (dens_nodre$x - min(dens_nodre$x)) / (max(dens_nodre$x) - min(dens_nodre$x))
dens_nodre <- rbind(c(0,0),dens_nodre,c(1,0))
dens_dre$y <- dens_dre$y/max(dens_dre$y)/4
dens_nodre$y <- dens_nodre$y/max(dens_nodre$y)/4
polygon(grconvertX(dens_nodre$x, from="npc", to="user"),grconvertY(dens_nodre$y, from="npc", to="user"), col="#e0e0e099", border="white")
polygon(grconvertX(dens_dre$x, from="npc", to="user"),grconvertY(dens_dre$y, from="npc", to="user"), col="#b2182b99", border="white")
mtext(sprintf("beta: %.2f  |  s.e.: %.2f  |  t: %.2f", coef(model_list[[ss]])["electronic"], summary(model_list[[ss]])$coefficients[,2]['electronic'], summary(model_list[[ss]])$coefficients[,3]['electronic']),1,line=0.25,col="white")
}
}
plot(0,0,type="n",frame=F,xaxt="n",yaxt="n",xlim=c(0,1),ylim=c(0,1))
rect(0,0,0.25,0.25,col="#e0e0e0",border="white")
rect(0,0.5,0.25,0.75,col="#b2182b",border="white")
text(0.3,0.25/2,"No E-Voting",cex=2,pos=4,col="white")
text(0.3,0.25/2+0.5,"E-Voting",cex=2,pos=4,col="white")
dev.off()
png("dre_states.png",width=1024,height=1024)
myPal <- colorRampPalette(rev(brewer.pal(7,"RdBu")[c(1,2,4,6,7)]))
par(mfrow=c(ceiling(sqrt(length(states_with_dre))), ceiling(sqrt(length(states_with_dre)))), mar=c(3.1,1.1,3.1,1.1), bg="#444444")
for(ss in states_with_dre)
{
plot(us[us$state_abbr==ss,],col=ifelse(us$dre[us$state_abbr==ss],"#b2182b", "#999999"), border=NA)
mtext(ss,3,line=0,cex=2,col="white")
if(sum(is.na(coef(model_list[[ss]]))) == 0)
{
sims_dre <- predictions(model_list[[ss]],demo_dre)
dens_dre <- density(sims_dre)
dens_dre <- data.frame(x=dens_dre$x, y=dens_dre$y)
dens_dre$x <- (dens_dre$x - min(dens_dre$x)) / (max(dens_dre$x) - min(dens_dre$x))
dens_dre <- rbind(c(0,0),dens_dre,c(1,0))
sims_nodre <- predictions(model_list[[ss]],demo_nodre)
dens_nodre <- density(sims_nodre)
dens_nodre <- data.frame(x=dens_nodre$x, y=dens_nodre$y)
dens_nodre$x <- (dens_nodre$x - min(dens_nodre$x)) / (max(dens_nodre$x) - min(dens_nodre$x))
dens_nodre <- rbind(c(0,0),dens_nodre,c(1,0))
dens_dre$y <- dens_dre$y/max(dens_dre$y)/4
dens_nodre$y <- dens_nodre$y/max(dens_nodre$y)/4
polygon(grconvertX(dens_nodre$x, from="npc", to="user"),grconvertY(dens_nodre$y, from="npc", to="user"), col="#e0e0e099", border="white")
polygon(grconvertX(dens_dre$x, from="npc", to="user"),grconvertY(dens_dre$y, from="npc", to="user"), col="#b2182b99", border="white")
mtext(sprintf("beta: %.2f  |  s.e.: %.2f  |  t: %.2f", coef(model_list[[ss]])["electronic"], summary(model_list[[ss]])$coefficients[,2]['electronic'], summary(model_list[[ss]])$coefficients[,3]['electronic']),1,line=0.25,col="white")
}
}
plot(0,0,type="n",frame=F,xaxt="n",yaxt="n",xlim=c(0,1),ylim=c(0,1))
rect(0,0,0.25,0.25,col="#e0e0e0",border="white")
rect(0,0.5,0.25,0.75,col="#b2182b",border="white")
text(0.3,0.25/2,"No E-Voting",cex=2,pos=4,col="white")
text(0.3,0.25/2+0.5,"E-Voting",cex=2,pos=4,col="white")
dev.off()
predictions <- function(model,data)
{
se <- summary(model)$coefficients[,2]
beta <- summary(model)$coefficients[,1]
draws <- mvrnorm(500000,beta,diag(se^2))
sims <- draws %*% as.matrix(unlist(c(1,demo_dre)))
sims
}
png("dre_states.png",width=1024,height=1024)
myPal <- colorRampPalette(rev(brewer.pal(7,"RdBu")[c(1,2,4,6,7)]))
par(mfrow=c(ceiling(sqrt(length(states_with_dre))), ceiling(sqrt(length(states_with_dre)))), mar=c(3.1,1.1,3.1,1.1), bg="#444444")
for(ss in states_with_dre)
{
plot(us[us$state_abbr==ss,],col=ifelse(us$dre[us$state_abbr==ss],"#b2182b", "#999999"), border=NA)
mtext(ss,3,line=0,cex=2,col="white")
if(sum(is.na(coef(model_list[[ss]]))) == 0)
{
sims_dre <- predictions(model_list[[ss]],demo_dre)
dens_dre <- density(sims_dre)
dens_dre <- data.frame(x=dens_dre$x, y=dens_dre$y)
dens_dre$x <- (dens_dre$x - min(dens_dre$x)) / (max(dens_dre$x) - min(dens_dre$x))
dens_dre <- rbind(c(0,0),dens_dre,c(1,0))
sims_nodre <- predictions(model_list[[ss]],demo_nodre)
dens_nodre <- density(sims_nodre)
dens_nodre <- data.frame(x=dens_nodre$x, y=dens_nodre$y)
dens_nodre$x <- (dens_nodre$x - min(dens_nodre$x)) / (max(dens_nodre$x) - min(dens_nodre$x))
dens_nodre <- rbind(c(0,0),dens_nodre,c(1,0))
dens_dre$y <- dens_dre$y/max(dens_dre$y)/4
dens_nodre$y <- dens_nodre$y/max(dens_nodre$y)/4
polygon(grconvertX(dens_nodre$x, from="npc", to="user"),grconvertY(dens_nodre$y, from="npc", to="user"), col="#e0e0e099", border="white")
polygon(grconvertX(dens_dre$x, from="npc", to="user"),grconvertY(dens_dre$y, from="npc", to="user"), col="#b2182b99", border="white")
mtext(sprintf("beta: %.2f  |  s.e.: %.2f  |  t: %.2f", coef(model_list[[ss]])["electronic"], summary(model_list[[ss]])$coefficients[,2]['electronic'], summary(model_list[[ss]])$coefficients[,3]['electronic']),1,line=0.25,col="white")
}
}
plot(0,0,type="n",frame=F,xaxt="n",yaxt="n",xlim=c(0,1),ylim=c(0,1))
rect(0,0,0.25,0.25,col="#e0e0e0",border="white")
rect(0,0.5,0.25,0.75,col="#b2182b",border="white")
text(0.3,0.25/2,"No E-Voting",cex=2,pos=4,col="white")
text(0.3,0.25/2+0.5,"E-Voting",cex=2,pos=4,col="white")
dev.off()
